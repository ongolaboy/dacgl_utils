# -*- coding: utf-8 -*-
# Generated by Django 1.10.7 on 2018-01-26 03:07
from __future__ import unicode_literals

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Equipement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('marque', models.CharField(default='HP', max_length=200)),
                ('modele', models.CharField(blank=True, max_length=200)),
                ('num_serie', models.CharField(default='x', max_length=200, unique=True, verbose_name='Numéro de série')),
                ('date_acquisition', models.DateField(verbose_name="Date d'acquisition")),
            ],
        ),
        migrations.CreateModel(
            name='Personnel',
            fields=[
                ('nom', models.CharField(max_length=200, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='RetraitConsommable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_retrait', models.DateField(auto_now_add=True, verbose_name='date du retrait')),
                ('demandeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bureautique.Personnel')),
            ],
            options={
                'verbose_name': 'Retrait des consommables',
                'verbose_name_plural': 'Retrait des consommables',
            },
        ),
        migrations.CreateModel(
            name='Consommable',
            fields=[
                ('equipement_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='bureautique.Equipement')),
                ('couleur', models.CharField(choices=[('noir', 'noir'), ('jaune', 'jaune'), ('cyan', 'cyan'), ('magenta', 'magenta'), ('mixte', 'mixte')], default='noir', max_length=20)),
                ('date_expiration', models.DateField(default=datetime.date(2019, 1, 26), help_text='ou date de fin de garantie')),
                ('disponible', models.BooleanField(default=True)),
                ('date_retrait', models.DateField(blank=True, null=True, verbose_name='date du retrait')),
                ('commentaire', models.TextField(blank=True)),
            ],
            options={
                'ordering': ['-disponible', 'disponible', 'date_expiration'],
            },
            bases=('bureautique.equipement',),
        ),
        migrations.CreateModel(
            name='Imprimante',
            fields=[
                ('equipement_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='bureautique.Equipement')),
                ('emplacement', models.CharField(default='Bureau', max_length=200)),
                ('fqdn', models.CharField(default='imprimante', max_length=200, verbose_name='Nom DNS')),
                ('categorie', models.CharField(choices=[('encre', "Jet d'encre"), ('laser', 'Laser'), ('multifonction', 'Multifonction')], default='encre', max_length=20, verbose_name="Type d'imprimante")),
            ],
            bases=('bureautique.equipement',),
        ),
        migrations.AddField(
            model_name='retraitconsommable',
            name='code_consommable',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='bureautique.Consommable'),
        ),
        migrations.AddField(
            model_name='retraitconsommable',
            name='imprimante_utilisee',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bureautique.Imprimante'),
        ),
        migrations.AddField(
            model_name='consommable',
            name='imprimante_compatible',
            field=models.ManyToManyField(blank=True, to='bureautique.Imprimante'),
        ),
    ]
